spring.application.name=TGNotification
spring.kafka.bootstrap-servers=${KAFKA_URL}
spring.kafka.consumer.group-id=news
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

telegram-bot.token=${TELEGRAM_BOT_TOKEN}
telegram-bot.username=${TELEGRAM_BOT_USERNAME}

spring.datasource.url=${POSTGRES_URL}
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.flyway.url=${POSTGRES_URL}
spring.flyway.user=${POSTGRES_USER}
spring.flyway.password=${POSTGRES_PASSWORD}
spring.flyway.locations=classpath:db/migration
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
